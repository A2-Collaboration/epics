#!/usr/bin/awk -f
#Script to generate the epics tagger.susubstitutions file for the hvcaen
#Ken Livingston

BEGIN{
    #There's no input file to read, it's all in the BEGIN algorithm

    #The Tagger HV is spread across 8 x CAEN A1932, 48 Channel Modules.
    #Channel 0 is the board channel for each module, The outputs are 1-48.
    #The modules take up 2 slots in the CAENx527

    psname="HVTAGGER";
    namebase="TAGG:TAGG:HV";
    
    #Fill arrays with the information, then print it out.

    nmod=8;
    #Names of the modules in order 0-7
    modnames="ABCDEFGH";
    #No of channels used in each module
    chan[0]=33;chan[1]=48;chan[2]=48;chan[3]=48;chan[4]=48;chan[5]=48;chan[6]=48;chan[7]=32;
    
    #Fill the default names with an X - meaning unused.
    for(m=0;m<nmod;m++){
      for(c=1;c<=48;c++){
	  name[m,c]=sprintf("\"%s:spare:%02d:%03d\"",psname,2*m,c);
      }
    }

    #Loop over all goosy channels overwriting the X name as required.
    m=0;c=1;                                  #init module and channel
    for(g=0;g<=352;g++){
	name[m,c]=sprintf("\"%s:g%03d\"",namebase,g);   #write the name
	if(c>=chan[m]){                         #if completed chans for this module
	    m++;c=1;continue;                     #next model,reset channel to 1
	}
	c++;                                    #increment channel in module
    }

    #Print out the tagger.substitutions file
    
    print "#This file was generated by running the commamd ./makeTaggerChan.gk > tagger.substitutions"

    #1st the Mainframe
    printf"file \"HVCAENx527.db\"\n";
    printf"#One line for each mainframe\n#\n{\n";
    #pattern   
    printf"         pattern\n";
    printf"        {PSNAME,    CRATE  }\n";
    #subtitutions
    printf"        {%s,      0  }\n",psname;
    printf"}\n\n";

    #2nd the Module boards 
    printf"file \"HVCAEN_A1932_0.db\"\n";
    printf"#one line for each A1932 module in each crate - CHANNEL is always 000\n#\n{\n";
    #pattern
    printf"         pattern\n";
    printf"        {PSNAME,                        NAME,    CRATE,     SLOT,    CHANNEL }\n";
    #substitutions 
    mtot=0; #Running total to work out the randge of chans covered bythe module
    for(m=0;m<nmod;m++){\
	printf"        {%s, \"%s:%s:g%03d-%03d\",        0,       %02d,        000 }\n",psname,namebase,substr(modnames,m+1,1),mtot,mtot+chan[m]-1,2*m;
      mtot+=chan[m];
    }
    printf"}\n";

    #3rd the Channels in each module
    printf"file \"HVCAEN_A1932ch.db\"\n";
    printf"#one line for each channel in each A1932 module\n#\n{\n";
    #pattern
    printf"         pattern\n";
    printf"        {PSNAME,                    NAME,     CRATE,     SLOT,    CHANNEL }\n";
    #substitutions
    for(m=0;m<8;m++){
      printf"#Slot %02d\n",2*m;
      for(c=1;c<=48;c++){
	  printf"        {%s,  %20s,         0,       %02d,        %03d }\n",psname,name[m,c],2*m,c;
      }
      printf"#\n";
    }
    printf"}\n";
}
