//
// File generated by rootcint at Thu Mar  5 10:47:37 2015

// Do NOT change. Changes will be lost next time file is generated
//

#define R__DICTIONARY_FILENAME srcdIezcaRootDict
#include "RConfig.h" //rootcint 4834
#if !defined(R__ACCESS_IN_SYMBOL)
//Break the privacy of classes -- Disabled for the moment
#define private public
#define protected public
#endif

// Since CINT ignores the std namespace, we need to do so in this file.
namespace std {} using namespace std;
#include "ezcaRootDict.h"

#include "TClass.h"
#include "TBuffer.h"
#include "TMemberInspector.h"
#include "TInterpreter.h"
#include "TVirtualMutex.h"
#include "TError.h"

#ifndef G__ROOT
#define G__ROOT
#endif

#include "RtypesImp.h"
#include "TIsAProxy.h"
#include "TFileMergeInfo.h"

// Direct notice to TROOT of the dictionary's loading.
namespace {
   static struct DictInit {
      DictInit() {
         ROOT::RegisterModule();
      }
   } __TheDictionaryInitializer;
}

// START OF SHADOWS

namespace ROOT {
   namespace Shadow {
   } // of namespace Shadow
} // of namespace ROOT
// END OF SHADOWS

/********************************************************
* src/ezcaRootDict.cc
* CAUTION: DON'T CHANGE THIS FILE. THIS FILE IS AUTOMATICALLY GENERATED
*          FROM HEADER FILES LISTED IN G__setup_cpp_environmentXXX().
*          CHANGE THOSE HEADER FILES AND REGENERATE THIS FILE.
********************************************************/

#ifdef G__MEMTEST
#undef malloc
#undef free
#endif

#if defined(__GNUC__) && __GNUC__ >= 4 && ((__GNUC_MINOR__ == 2 && __GNUC_PATCHLEVEL__ >= 1) || (__GNUC_MINOR__ >= 3))
#pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif

extern "C" void G__cpp_reset_tagtableezcaRootDict();

extern "C" void G__set_cpp_environmentezcaRootDict() {
  G__add_compiledheader("TObject.h");
  G__add_compiledheader("TMemberInspector.h");
  G__add_compiledheader("src/ezcaRoot.h");
  G__cpp_reset_tagtableezcaRootDict();
}
#include <new>
extern "C" int G__cpp_dllrevezcaRootDict() { return(30051515); }

/*********************************************************
* Member function Interface Method
*********************************************************/

/* Setting up global function */
static int G__ezcaRootDict__0_289(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) epicsGet((char*) G__int(libp->para[0]), (char) G__int(libp->para[1])
, (int) G__int(libp->para[2]), (void*) G__int(libp->para[3])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ezcaRootDict__0_290(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) epicsGetChar((char*) G__int(libp->para[0]), (int) G__int(libp->para[1])
, (char*) G__int(libp->para[2])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ezcaRootDict__0_291(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) epicsGetString((char*) G__int(libp->para[0]), (int) G__int(libp->para[1])
, (char*) G__int(libp->para[2])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ezcaRootDict__0_292(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) epicsGetShort((char*) G__int(libp->para[0]), (int) G__int(libp->para[1])
, (short*) G__int(libp->para[2])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ezcaRootDict__0_293(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) epicsGetFloat((char*) G__int(libp->para[0]), (int) G__int(libp->para[1])
, (float*) G__int(libp->para[2])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ezcaRootDict__0_294(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) epicsGetDouble((char*) G__int(libp->para[0]), (int) G__int(libp->para[1])
, (double*) G__int(libp->para[2])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ezcaRootDict__0_295(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) epicsPut((char*) G__int(libp->para[0]), (char) G__int(libp->para[1])
, (int) G__int(libp->para[2]), (void*) G__int(libp->para[3])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ezcaRootDict__0_296(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) epicsPutChar((char*) G__int(libp->para[0]), (int) G__int(libp->para[1])
, (char*) G__int(libp->para[2])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ezcaRootDict__0_297(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) epicsPutString((char*) G__int(libp->para[0]), (int) G__int(libp->para[1])
, (char*) G__int(libp->para[2])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ezcaRootDict__0_298(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) epicsPutShort((char*) G__int(libp->para[0]), (int) G__int(libp->para[1])
, (short*) G__int(libp->para[2])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ezcaRootDict__0_299(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) epicsPutFloat((char*) G__int(libp->para[0]), (int) G__int(libp->para[1])
, (float*) G__int(libp->para[2])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ezcaRootDict__0_300(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) epicsPutDouble((char*) G__int(libp->para[0]), (int) G__int(libp->para[1])
, (double*) G__int(libp->para[2])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ezcaRootDict__0_301(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) epicsGetControlLimits((char*) G__int(libp->para[0]), (double*) G__int(libp->para[1])
, (double*) G__int(libp->para[2])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ezcaRootDict__0_302(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) epicsGetGraphicLimits((char*) G__int(libp->para[0]), (double*) G__int(libp->para[1])
, (double*) G__int(libp->para[2])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ezcaRootDict__0_303(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) epicsGetNelem((char*) G__int(libp->para[0]), (int*) G__int(libp->para[1])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ezcaRootDict__0_304(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) epicsGetPrecision((char*) G__int(libp->para[0]), (short*) G__int(libp->para[1])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ezcaRootDict__0_305(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) epicsGetUnits((char*) G__int(libp->para[0]), (char*) G__int(libp->para[1])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ezcaRootDict__0_306(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) epicsPutOldCa((char*) G__int(libp->para[0]), (char) G__int(libp->para[1])
, (int) G__int(libp->para[2]), (void*) G__int(libp->para[3])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ezcaRootDict__0_308(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 102, (double) epicsGetTimeout());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ezcaRootDict__0_309(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) epicsSetTimeout((float) G__double(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ezcaRootDict__0_310(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) epicsGetRetryCount());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ezcaRootDict__0_311(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) epicsSetRetryCount((int) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}


/*********************************************************
* Member function Stub
*********************************************************/

/*********************************************************
* Global function Stub
*********************************************************/

/*********************************************************
* Get size of pointer to member function
*********************************************************/
class G__Sizep2memfuncezcaRootDict {
 public:
  G__Sizep2memfuncezcaRootDict(): p(&G__Sizep2memfuncezcaRootDict::sizep2memfunc) {}
    size_t sizep2memfunc() { return(sizeof(p)); }
  private:
    size_t (G__Sizep2memfuncezcaRootDict::*p)();
};

size_t G__get_sizep2memfuncezcaRootDict()
{
  G__Sizep2memfuncezcaRootDict a;
  G__setsizep2memfunc((int)a.sizep2memfunc());
  return((size_t)a.sizep2memfunc());
}


/*********************************************************
* virtual base class offset calculation interface
*********************************************************/

   /* Setting up class inheritance */

/*********************************************************
* Inheritance information setup/
*********************************************************/
extern "C" void G__cpp_setup_inheritanceezcaRootDict() {

   /* Setting up class inheritance */
}

/*********************************************************
* typedef information setup/
*********************************************************/
extern "C" void G__cpp_setup_typetableezcaRootDict() {

   /* Setting up typedef entry */
   G__search_typename2("vector<ROOT::TSchemaHelper>",117,G__get_linked_tagnum(&G__ezcaRootDictLN_vectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<const_iterator>",117,G__get_linked_tagnum(&G__ezcaRootDictLN_reverse_iteratorlEvectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__ezcaRootDictLN_vectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<iterator>",117,G__get_linked_tagnum(&G__ezcaRootDictLN_reverse_iteratorlEvectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__ezcaRootDictLN_vectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<TVirtualArray*>",117,G__get_linked_tagnum(&G__ezcaRootDictLN_vectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<const_iterator>",117,G__get_linked_tagnum(&G__ezcaRootDictLN_reverse_iteratorlEvectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__ezcaRootDictLN_vectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<iterator>",117,G__get_linked_tagnum(&G__ezcaRootDictLN_reverse_iteratorlEvectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__ezcaRootDictLN_vectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgR));
   G__setnewtype(-1,NULL,0);
}

/*********************************************************
* Data Member information setup/
*********************************************************/

   /* Setting up class,struct,union tag member variable */
extern "C" void G__cpp_setup_memvarezcaRootDict() {
}
/***********************************************************
************************************************************
************************************************************
************************************************************
************************************************************
************************************************************
************************************************************
***********************************************************/

/*********************************************************
* Member function information setup for each class
*********************************************************/

/*********************************************************
* Member function information setup
*********************************************************/
extern "C" void G__cpp_setup_memfuncezcaRootDict() {
}

/*********************************************************
* Global variable information setup for each class
*********************************************************/
static void G__cpp_setup_global0() {

   /* Setting up global variables */
   G__resetplocal();

}

static void G__cpp_setup_global1() {
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__ezcaRootDictLN_EEpicsTypes),-1,-1,1,"kEpicsBYTE=0",0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__ezcaRootDictLN_EEpicsTypes),-1,-1,1,"kEpicsSTRING=1",0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__ezcaRootDictLN_EEpicsTypes),-1,-1,1,"kEpicsSHORT=2",0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__ezcaRootDictLN_EEpicsTypes),-1,-1,1,"kEpicsLONG=3",0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__ezcaRootDictLN_EEpicsTypes),-1,-1,1,"kEpicsFLOAT=4",0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__ezcaRootDictLN_EEpicsTypes),-1,-1,1,"kEpicsDOUBLE=5",0,(char*)NULL);

   G__resetglobalenv();
}
extern "C" void G__cpp_setup_globalezcaRootDict() {
  G__cpp_setup_global0();
  G__cpp_setup_global1();
}

/*********************************************************
* Global function information setup for each class
*********************************************************/
static void G__cpp_setup_func0() {
   G__lastifuncposition();

}

static void G__cpp_setup_func1() {
}

static void G__cpp_setup_func2() {
   G__memfunc_setup("epicsGet", 820, G__ezcaRootDict__0_289, 105, -1, -1, 0, 4, 1, 1, 0, 
"C - - 0 - pvname c - - 0 - ezcatype "
"i - - 0 - nelem Y - - 0 - data_buff", (char*) NULL
, (void*) NULL, 0);
   G__memfunc_setup("epicsGetChar", 1202, G__ezcaRootDict__0_290, 105, -1, -1, 0, 3, 1, 1, 0, 
"C - - 0 - pvname i - - 0 - nelem "
"C - - 0 - data_buff", (char*) NULL
, (void*) NULL, 0);
   G__memfunc_setup("epicsGetString", 1451, G__ezcaRootDict__0_291, 105, -1, -1, 0, 3, 1, 1, 0, 
"C - - 0 - pvname i - - 0 - nelem "
"C - - 0 - data_buff", (char*) NULL
, (void*) NULL, 0);
   G__memfunc_setup("epicsGetShort", 1348, G__ezcaRootDict__0_292, 105, -1, -1, 0, 3, 1, 1, 0, 
"C - - 0 - pvname i - - 0 - nelem "
"S - - 0 - data_buff", (char*) NULL
, (void*) NULL, 0);
   G__memfunc_setup("epicsGetFloat", 1322, G__ezcaRootDict__0_293, 105, -1, -1, 0, 3, 1, 1, 0, 
"C - - 0 - pvname i - - 0 - nelem "
"F - - 0 - data_buff", (char*) NULL
, (void*) NULL, 0);
   G__memfunc_setup("epicsGetDouble", 1423, G__ezcaRootDict__0_294, 105, -1, -1, 0, 3, 1, 1, 0, 
"C - - 0 - pvname i - - 0 - nelem "
"D - - 0 - data_buff", (char*) NULL
, (void*) NULL, 0);
   G__memfunc_setup("epicsPut", 845, G__ezcaRootDict__0_295, 105, -1, -1, 0, 4, 1, 1, 0, 
"C - - 0 - pvname c - - 0 - ezcatype "
"i - - 0 - nelem Y - - 0 - data_buff", (char*) NULL
, (void*) NULL, 0);
   G__memfunc_setup("epicsPutChar", 1227, G__ezcaRootDict__0_296, 105, -1, -1, 0, 3, 1, 1, 0, 
"C - - 0 - pvname i - - 0 - nelem "
"C - - 0 - data_buff", (char*) NULL
, (void*) NULL, 0);
   G__memfunc_setup("epicsPutString", 1476, G__ezcaRootDict__0_297, 105, -1, -1, 0, 3, 1, 1, 0, 
"C - - 0 - pvname i - - 0 - nelem "
"C - - 0 - data_buff", (char*) NULL
, (void*) NULL, 0);
   G__memfunc_setup("epicsPutShort", 1373, G__ezcaRootDict__0_298, 105, -1, -1, 0, 3, 1, 1, 0, 
"C - - 0 - pvname i - - 0 - nelem "
"S - - 0 - data_buff", (char*) NULL
, (void*) NULL, 0);
   G__memfunc_setup("epicsPutFloat", 1347, G__ezcaRootDict__0_299, 105, -1, -1, 0, 3, 1, 1, 0, 
"C - - 0 - pvname i - - 0 - nelem "
"F - - 0 - data_buff", (char*) NULL
, (void*) NULL, 0);
   G__memfunc_setup("epicsPutDouble", 1448, G__ezcaRootDict__0_300, 105, -1, -1, 0, 3, 1, 1, 0, 
"C - - 0 - pvname i - - 0 - nelem "
"D - - 0 - data_buff", (char*) NULL
, (void*) NULL, 0);
   G__memfunc_setup("epicsGetControlLimits", 2183, G__ezcaRootDict__0_301, 105, -1, -1, 0, 3, 1, 1, 0, 
"C - - 0 - pvname D - - 0 - low "
"D - - 0 - high", (char*) NULL
, (void*) NULL, 0);
   G__memfunc_setup("epicsGetGraphicLimits", 2148, G__ezcaRootDict__0_302, 105, -1, -1, 0, 3, 1, 1, 0, 
"C - - 0 - pvname D - - 0 - low "
"D - - 0 - high", (char*) NULL
, (void*) NULL, 0);
   G__memfunc_setup("epicsGetNelem", 1317, G__ezcaRootDict__0_303, 105, -1, -1, 0, 2, 1, 1, 0, 
"C - - 0 - pvname I - - 0 - nelem", (char*) NULL
, (void*) NULL, 0);
   G__memfunc_setup("epicsGetPrecision", 1760, G__ezcaRootDict__0_304, 105, -1, -1, 0, 2, 1, 1, 0, 
"C - - 0 - pvname S - - 0 - precision", (char*) NULL
, (void*) NULL, 0);
}

static void G__cpp_setup_func3() {
   G__memfunc_setup("epicsGetUnits", 1351, G__ezcaRootDict__0_305, 105, -1, -1, 0, 2, 1, 1, 0, 
"C - - 0 - pvname C - - 0 - units", (char*) NULL
, (void*) NULL, 0);
   G__memfunc_setup("epicsPutOldCa", 1296, G__ezcaRootDict__0_306, 105, -1, -1, 0, 4, 1, 1, 0, 
"C - - 0 - pvname c - - 0 - ezcatype "
"i - - 0 - nelem Y - - 0 - data_buff", (char*) NULL
, (void*) NULL, 0);
   G__memfunc_setup("epicsGetTimeout", 1563, G__ezcaRootDict__0_308, 102, -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL
, (void*) NULL, 0);
   G__memfunc_setup("epicsSetTimeout", 1575, G__ezcaRootDict__0_309, 105, -1, -1, 0, 1, 1, 1, 0, "f - - 0 - sec", (char*) NULL
, (void*) NULL, 0);
   G__memfunc_setup("epicsGetRetryCount", 1875, G__ezcaRootDict__0_310, 105, -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL
, (void*) NULL, 0);
   G__memfunc_setup("epicsSetRetryCount", 1887, G__ezcaRootDict__0_311, 105, -1, -1, 0, 1, 1, 1, 0, "i - - 0 - retry", (char*) NULL
, (void*) NULL, 0);

   G__resetifuncposition();
}

extern "C" void G__cpp_setup_funcezcaRootDict() {
  G__cpp_setup_func0();
  G__cpp_setup_func1();
  G__cpp_setup_func2();
  G__cpp_setup_func3();
}

/*********************************************************
* Class,struct,union,enum tag information setup
*********************************************************/
/* Setup class/struct taginfo */
G__linked_taginfo G__ezcaRootDictLN_vectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgR = { "vector<ROOT::TSchemaHelper,allocator<ROOT::TSchemaHelper> >" , 99 , -1 };
G__linked_taginfo G__ezcaRootDictLN_reverse_iteratorlEvectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgRcLcLiteratorgR = { "reverse_iterator<vector<ROOT::TSchemaHelper,allocator<ROOT::TSchemaHelper> >::iterator>" , 99 , -1 };
G__linked_taginfo G__ezcaRootDictLN_vectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgR = { "vector<TVirtualArray*,allocator<TVirtualArray*> >" , 99 , -1 };
G__linked_taginfo G__ezcaRootDictLN_reverse_iteratorlEvectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgRcLcLiteratorgR = { "reverse_iterator<vector<TVirtualArray*,allocator<TVirtualArray*> >::iterator>" , 99 , -1 };
G__linked_taginfo G__ezcaRootDictLN_EEpicsTypes = { "EEpicsTypes" , 101 , -1 };

/* Reset class/struct taginfo */
extern "C" void G__cpp_reset_tagtableezcaRootDict() {
  G__ezcaRootDictLN_vectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgR.tagnum = -1 ;
  G__ezcaRootDictLN_reverse_iteratorlEvectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgRcLcLiteratorgR.tagnum = -1 ;
  G__ezcaRootDictLN_vectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgR.tagnum = -1 ;
  G__ezcaRootDictLN_reverse_iteratorlEvectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgRcLcLiteratorgR.tagnum = -1 ;
  G__ezcaRootDictLN_EEpicsTypes.tagnum = -1 ;
}


extern "C" void G__cpp_setup_tagtableezcaRootDict() {

   /* Setting up class,struct,union tag entry */
   G__get_linked_tagnum_fwd(&G__ezcaRootDictLN_vectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgR);
   G__get_linked_tagnum_fwd(&G__ezcaRootDictLN_reverse_iteratorlEvectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgRcLcLiteratorgR);
   G__get_linked_tagnum_fwd(&G__ezcaRootDictLN_vectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgR);
   G__get_linked_tagnum_fwd(&G__ezcaRootDictLN_reverse_iteratorlEvectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgRcLcLiteratorgR);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__ezcaRootDictLN_EEpicsTypes),sizeof(int),-1,0,(char*)NULL,NULL,NULL);
}
extern "C" void G__cpp_setupezcaRootDict(void) {
  G__check_setup_version(30051515,"G__cpp_setupezcaRootDict()");
  G__set_cpp_environmentezcaRootDict();
  G__cpp_setup_tagtableezcaRootDict();

  G__cpp_setup_inheritanceezcaRootDict();

  G__cpp_setup_typetableezcaRootDict();

  G__cpp_setup_memvarezcaRootDict();

  G__cpp_setup_memfuncezcaRootDict();
  G__cpp_setup_globalezcaRootDict();
  G__cpp_setup_funcezcaRootDict();

   if(0==G__getsizep2memfunc()) G__get_sizep2memfuncezcaRootDict();
  return;
}
class G__cpp_setup_initezcaRootDict {
  public:
    G__cpp_setup_initezcaRootDict() { G__add_setup_func("ezcaRootDict",(G__incsetup)(&G__cpp_setupezcaRootDict)); G__call_setup_funcs(); }
   ~G__cpp_setup_initezcaRootDict() { G__remove_setup_func("ezcaRootDict"); }
};
G__cpp_setup_initezcaRootDict G__cpp_setup_initializerezcaRootDict;

